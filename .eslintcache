[{"C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\index.js":"1","C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\App.js":"2","C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\reportWebVitals.js":"3","C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\API.js":"4","C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\FilterInput.js":"5","C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\Table.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":804,"mtime":1610740922636,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":142,"mtime":1610738645494,"results":"11","hashOfConfig":"8"},{"size":578,"mtime":1610738651737,"results":"12","hashOfConfig":"8"},{"size":2323,"mtime":1610738635622,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"hmv6e2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\index.js",[],["30","31"],"C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\App.js",["32"],"import React, { useEffect, useState } from \"react\";\nimport FilterInput from \"./FilterInput\";\nimport Table from \"./Table\";\nimport { getUsers } from \"./API\";\nimport \"./App.css\";\n\nconst PORT = process.env.PORT || 3001;\n\nfunction App() {\n  const [initialUsers, updateAvailableUsers] = useState([]);\n  const [usersToRender, updateUsersToRender] = useState([]);\n\n  useEffect(() => {\n    getUsers().then(({ data: { results } }) => updateAvailableUsers(results));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Employee Directory</h1>\n      <p>\n        To filter by first name, please begin your search in the user input\n        below\n      </p>\n      <FilterInput users={initialUsers} updateUsers={updateUsersToRender} />\n      <Table users={usersToRender} />\n    </div>\n  );\n}\n\n\nexport default App;\n","C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\reportWebVitals.js",[],"C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\API.js",[],"C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\FilterInput.js",["33"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst FilterInput = ({ users, updateUsers }) => {\r\nconst [inputValue, updateInput] = useState(\"\");\r\n\r\nuseEffect(() => {\r\n    const filteredUsers =\r\n    inputValue === \"\"\r\n        ? users\r\n        : users.filter(\r\n            ({ name: { first } }) =>\r\n            first.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\r\n        );\r\n\r\n    updateUsers(filteredUsers);\r\n}, [inputValue, users]);\r\n\r\nreturn (\r\n    <input value={inputValue} onChange={e => updateInput(e.target.value)} />\r\n);\r\n};\r\n\r\nexport default FilterInput;","C:\\Users\\jdefr\\development\\homework\\User-Directory\\directory\\src\\Table.js",["34"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst Table = ({ users }) => {\r\nconst [sortedUsers, updateSortedUsers] = useState([]);\r\n\r\nuseEffect(() => updateSortedUsers(users), [users]);\r\n\r\nreturn (\r\n    <div>\r\n    <table className=\"table\">\r\n        <thead>\r\n        <tr>\r\n            <th scope=\"col\">title</th>\r\n            <th\r\n            scope=\"col\"\r\n            onClick={() => {\r\n                const usersCopy = [...users];\r\n                const updateSort = usersCopy.sort((a, b) => {\r\n                const nameA = a.name.first;\r\n                const nameB = b.name.first;\r\n\r\n                if (nameA < nameB) {\r\n                    return -1;\r\n                }\r\n                if (nameA > nameB) {\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n                });\r\n\r\n                updateSortedUsers(updateSort);\r\n            }}\r\n            >\r\n            First\r\n            </th>\r\n            <th scope=\"col\">Last</th>\r\n            <th scope=\"col\">gender</th>\r\n            <th scope=\"col\">email</th>\r\n            <th scope=\"col\">phone</th>\r\n            <th scope=\"col\">cell</th>\r\n            <th scope=\"col\">city</th>\r\n            <th scope=\"col\">state</th>\r\n            <th scope=\"col\">country</th>\r\n            <th scope=\"col\">postcode</th>\r\n            <th scope=\"col\">picture</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {sortedUsers.map(\r\n            ({\r\n            location: { city, state, country, postcode },\r\n            picture: { thumbnail },\r\n            cell,\r\n            phone,\r\n            gender,\r\n            email,\r\n            name: { first, last, title }\r\n            }) => (\r\n            <tr key={email}>\r\n                <td>{title}</td>\r\n                <th>{first}</th>\r\n                <td>{last}</td>\r\n                <td>{gender}</td>\r\n                <td>{email}</td>\r\n                <td>{phone}</td>\r\n                <td>{cell}</td>\r\n                <td>{city}</td>\r\n                <td>{state}</td>\r\n                <td>{country}</td>\r\n                <td>{postcode}</td>\r\n                <td>\r\n                <img src={thumbnail} />\r\n                </td>\r\n\r\n                <td></td>\r\n            </tr>\r\n            )\r\n        )}\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Table;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":7,"column":7,"nodeType":"41","messageId":"42","endLine":7,"endColumn":11},{"ruleId":"43","severity":1,"message":"44","line":16,"column":4,"nodeType":"45","endLine":16,"endColumn":23,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":73,"column":17,"nodeType":"49","endLine":73,"endColumn":40},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'PORT' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateUsers'. Either include it or remove the dependency array. If 'updateUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [inputValue, updateUsers, users]",{"range":"55","text":"56"},[428,447],"[inputValue, updateUsers, users]"]